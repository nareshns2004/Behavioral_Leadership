Data structures and Algorithms

1) Sorting
    Introduction to Sorting
    Basics of Asymptotic Analysis and Worst Case & Average Case Analysis
    Different Sorting Algorithms and their comparison
    Algorithm paradigms like Divide & Conquer, Decrease & Conquer, Transform & Conquer
    Presorting
    Extensions of Merge Sort, Quick Sort, Heap Sort
    Common sorting-related coding interview problems

2) Recursion
    Recursion as a Lazy Manager's Strategy
    Recursive Mathematical Functions
    Combinatorial Enumeration
    Backtracking
    Exhaustive Enumeration & General Template
    Common recursion- and backtracking-related coding interview problems

3) Trees
    Dictionaries & Sets, Hash Tables 
    Modeling data as Binary Trees and Binary Search Tree and performing different operations over them
    Tree Traversals and Constructions 
    BFS Coding Patterns
    DFS Coding Patterns
    Tree Construction from its traversals 
    Common trees-related coding interview problems

4) Graphs
    Overview of Graphs
    Problem definition of the 7 Bridges of Konigsberg and its connection with Graph theory
    What is a graph, and when do you model a problem as a Graph?
    How to store a Graph in memory (Adjacency Lists, Adjacency Matrices, Adjacency Maps)
    Graphs traversal: BFS and DFS, BFS Tree, DFS stack-based implementation
    A general template to solve any problems modeled as Graphs
    Graphs in Interviews
    Common graphs-related coding interview problems

5) Dynamic Programming
    Dynamic Programming Introduction
    Modeling problems as recursive mathematical functions
    Detecting overlapping subproblems
    Top-down Memorization
    Bottom-up Tabulation
    Optimizing Bottom-up Tabulation
    Common DP-related coding interview problems

===================================================================================================================================================================

Embedded Software Engineering

1) Designing and Developing Embedded Systems
    Structured design of finite state machines for real-life embedded systems
    Design a smart garden watering system with multiple zones. Optimize for performance and cost 
    Design a traffic light controller, and many more
    Deep dive into the intricacies of embedded systems design under multiple resource constraints — Size, Storage, Performance, Operating Conditions
    How to detect and handle external and internal faults and recover/tolerate methods
    Common interview questions on debugging embedded devices. Implementing loggers
    How to ensure fault-resilience in embedded software?
    How to design for performance, logging, and testability?
    Templates to answer open-ended system design interview questions

2) Programming for Embedded Devices
    Deep dive into the interview-relevant concepts of Embedded C, including optimized coding
    Interesting embedded specific use cases of Bit Manipulation
    Detailed discussion of concepts such as Pointers, number representation and data types, and advanced use of volatile and const qualifiers in Embedded C 
    Comprehensive coverage of efficient coding techniques
    Deep understanding of various compiler optimizations using generated assembly code
    FAANG+ level Interview questions involving Byte Ordering, Pointers, Number Representation, and Data Alignment and Packing in Aggregate Data Types. 
    Problems like finding the number of set bits in a given number; Exhaustive coverage of different solutions along with pros and cons 

3) Microcontroller Units
    Systematic coverage of computer organization and architecture using ARM CORTEX
    CPU, Memory and Peripheral Bus, Instruction Pipeline and Cache 
    Deep dive into the programmer’s model of the ARM CORTEX M
    Registers and modes
    Interesting Assembly instructions for efficient coding
    Stack memory and its usage in C and Assembly procedure calls
    ARM Procedure Calling Standard (AAPCS) for binary compatibility
    CORTEX M exception handling and interrupts 
    Low-power features and deep sleep states
    Reset handling sequence, usage of different stacks and switching processor modes
    Interrupts, such as Interrupt Vectoring, Interrupt Latency, and Latency Reduction features (register stacking, tail chaining, late arrival)
    Popular FAANG+ Interview questions on designing low-level spinlocks, efficient usage of atomic operations 
    Design an SW Timer library using a 16-bit timer on the MCU chip

4) Embedded OS
    Deep dive into the interview relevant concepts of HW Initialization and Board Bring-up
    Types of boot loaders
    Security issues in boot loaders
    U-Boot
    Simulated interview questions: Design device drivers in a bare-metal environment
    Questions related to the linker, boot flow, and boot loaders 
    What are some things that typically go wrong in a boot flow? 
    Concurrency issues in Embedded Systems and concurrency control mechanisms such as Spinlocks, Mutexes, and Semaphores using P-threads
    Interview questions on correct and inappropriate usage of concurrency control mechanisms
    Discussion around Critical Section, Shared Resources, InterProcess Synchronization, Communication, and Reentrancy
    Popular FAANG+ Interview questions around deadlock, livelock, Spinlock, Semaphore, and Mutex
    List down some scenarios where you would use a spin lock instead of a mutex? 
    Designing high-performance NW appliances
